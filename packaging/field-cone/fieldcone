#!/bin/bash

### BEGIN INIT INFO
# Provides:         fieldcone
# Required-Start:   $local_fs $remote_fs $network $time
# Required-Stop:
# Should-Stop:
# X-Start-Before:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Field Cone node.js server
# Description:
### END INIT INFO

case "$1" in
stop)
    echo "Killing Field Cone service."
    killall node
    date > /var/tmp/last-stop-time
    ;;

start)
    killall node

    . /var/tmp/ft_environment
    ft-update
    ec=$?
    if [ $ec -eq 42 ]; then
        echo "ft-update needed to update itself, rerunning"
        ft-update
        ec=$?
    fi
    if [ $ec -eq 0 ]; then
        echo "Update client successful"
    else
        echo "Update failed! But maybe we don't have internet access... still trying to launch"
    fi

    ## If we are not in ad-hoc mode, the below startup code does not make any sense
    ## We can check our mode at `/var/tmp/.wifi-mode`, if it _doesnt_ exist, we must
    ## be in wifi mode, as that is our default (starting) state. If it does exist,
    ## it will contain either "regular" or "adhoc"

    ## If we are in "regular" mode, switch to adhoc mode. This script will be rerun
    ## and the service will start.

    if [ ! -f "/var/tmp/.wifi-mode" ]
    then
        echo "WiFi Mode file does not exist, switching to adhoc!"
        sudo switch_to_adhoc.sh
    fi

    mode=`cat /var/tmp/.wifi-mode`

    case "$mode" in
        *regular*)
            # results in a reboot
            echo "WiFi mode is set to regular, switching to adhoc!"
            sudo switch_to_adhoc.sh
            ;;
    esac

    echo "Starting Field Cone service."
    date > /var/tmp/last-start-time
    export FIELD_CONE_SOCKET_URL=http://192.168.2.1:6000
    cd /opt/field-cone-api && npm run start:prod &
    ;;

restart)
    stop
    start
    ;;

*)
    echo "Usage: ${0:-} {start|stop|restart}" >&2
    exit 1
    ;;
esac