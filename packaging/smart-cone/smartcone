#!/bin/sh

### BEGIN INIT INFO
# Provides:         smartcone
# Required-Start:   $local_fs $remote_fs $network $time
# Required-Stop:
# Should-Stop:
# X-Start-Before:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Smart Cone node.js server.
# Description: This includes the smart-cone-api and the field-trainer frontend
### END INIT INFO

case "$1" in
stop)
    echo "Killing Smart Cone service."
    sudo killall node
    date > /var/tmp/last-stop-time
    ;;

start)
    killall node
    echo "Checking for updates"
    # Set the environment variables ft-update needs
    . /var/tmp/ft_environment
    ft-update
    ec=$?
    if [ $ec -eq 42 ]; then
	    echo "ft-update needed to update itself, rerunning"
	    ft-update
	    ec=$?
    fi
    if [ $ec -eq 0 ]; then
	    echo "Update client successful"
    else
        echo "Update failed! But maybe we don't have internet access.. still trying to launch"
    fi

    ## NEW ##
    # If we are currently in regular-wifi mode, and there exists a file at:
    # /var/tmp/.initiated-update, then the user requested this cone be updated
    # we will switch into ad-hoc mode, and will delete the file before making the switch

    ## The file exists, we must've just finished checking for or applying an update, time to reboot
    if [ -f "/var/tmp/.initiated-update" ]
    then
        echo "User requested an update and we are in regular mode. Switching to ad-hoc to complete update process"
        echo "Deleting the initiated update marker file"
        rm /var/tmp/.initiated-update
        sudo /usr/bin/switch_to_adhoc.sh
    fi

    ## if the file didn't exist, then just continue as normal

    echo "Starting Smart Cone service."
    date > /var/tmp/last-start-time
    node /opt/smart-cone-api/dist/smart-cone-api/src/main.js &
    node /opt/serve-frontend/index.js &

    ;;

restart)
    stop
    start
    ;;

*)
    echo "Usage: ${0:-} {start|stop|restart}" >&2
    exit 1
    ;;
esac
